{"version":3,"sources":["../Network.js"],"names":["nextId","list","reduce","id","entry","Math","max","Network","what","Promise","resolve","reject","d3","json","error","data","dataUrl","domSelector","handlers","texts","undefined","d3json","then","diagram","ForceDiagram","document","querySelector","showDetails","details","createElement","setAttribute","body","append","addHandler","node","nodes","find","links","map","source","Object","assign","title","type","target","targetId","keys","a","b","concat","setBothSidesVisible","d","visible","filter","open","add","update","setTimeout","className","initialized","fixNode","nodeEl","getDomElement","container","form","appendChild","scaleToNode","classList","catch","console","newData","remove","innerHTML","updateNode","forEach","link","addNode","closeNode","openNode","otherNode","getLinkedNodes","length","keepVisible","x","y","push","n","l","nodeRemoved","getNode","cmpLink","some","r","nameRequired","name","existing","toLowerCase","newNode","nodesConnected","newLink","factor","scale","module","exports"],"mappings":"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","file":"Network.js","sourcesContent":["/*global d3,ForceDiagram, module*/\nconst nextId = list => list.reduce((id, entry) => Math.max(id, entry.id), 0) + 1\n\nclass Network {\n  d3json(what) {\n    return new Promise((resolve, reject) => {\n      d3.json(what, (error, data) => error ? reject(error) : resolve(data))\n    })\n  }\n\n  constructor(dataUrl, domSelector, handlers = {}, texts = {}) {\n    handlers.error = handlers.error || (() => undefined)\n    this.texts = texts\n    this.handlers = handlers\n    this.d3json(dataUrl)\n      .then(data => {\n        this.diagram = new ForceDiagram(document.querySelector(domSelector))\n        if (this.handlers.showDetails) {\n          this.details = document.createElement('div')\n          this.details.setAttribute('class', 'details')\n          document.body.append(this.details)\n          this.diagram.addHandler('click', node => this.showDetails(node))\n        }\n\n        const node = id => data.nodes.find(node => node.id === id) || handlers.error('Node id ' + id + ' not found');\n        let id = 1\n        this.links = data.nodes.map(source => {\n          source.links = Object.assign({}, ...(source.links || []).map(list => {\n            const title = (this.texts && this.texts[list.type]) || list.type\n            const links = list.nodes.map(targetId => ({id: id++, source, target: node(targetId)}))\n            return {[list.type]: {type: list.type, title, links}}\n          }))\n          return Object.keys(source.links).map(type => source.links[type].links).reduce((a, b) => a.concat(b), [])\n        }).reduce((a, b) => a.concat(b), [])\n        this.nodes = data.nodes\n\n        const setBothSidesVisible = d => d.source.visible = d.target.visible = true\n        this.links.filter(d => d.source.open || d.target.open).map(setBothSidesVisible)\n        const links = this.links.filter(d => d.source.visible && d.target.visible)\n        const nodes = this.nodes.filter(d => d.visible)\n        this.diagram.add(nodes, links)\n        this.diagram.update()\n\n        setTimeout(() => {\n          document.body.className = 'initialized'\n          this.handlers.initialized && this.handlers.initialized()\n        }, 0)\n      })\n  }\n\n  showDetails(node) {\n    ForceDiagram.fixNode(node)\n    const nodeEl = ForceDiagram.getDomElement(node)\n    const container = document.createElement('div')\n    const form = document.createElement('div')\n    form.setAttribute('class', 'detailForm')\n    container.appendChild(form)\n    this.details.appendChild(container)\n    this.diagram.scaleToNode(node, 1.2, -175, -30)\n      .then(() => {\n        document.body.classList.add('dialogOpen')\n        nodeEl.classList.add('menuActive')\n      })\n      .then(() => node.details ? this.d3json(node.details) : node)\n      .then(data => this.handlers.showDetails(data, form, node))\n      .catch(console.error) // eslint-disable-line no-console\n      .then(newData => {\n        node = newData || node\n        document.body.classList.remove('dialogOpen')\n        nodeEl.classList.remove('menuActive')\n        this.details.innerHTML = ''\n        this.diagram.updateNode(node)\n        this.diagram.update()\n      })\n  }\n\n  showNodes(node, type) {\n    node.links[type].links.forEach(link => {\n      link.target.visible = true\n      this.addNode(link.target)\n      this.diagram.add([link.target], [link])\n    })\n    this.diagram.update()\n  }\n\n  toggle(node) {\n    return node.open ? this.closeNode(node) : this.openNode(node)\n  }\n\n  closeNode(node) {\n    node.open = false\n    this.links\n      .filter(link => link.source.id === node.id || link.target.id === node.id)\n      .forEach(link => {\n        const otherNode = link.source.id === node.id ? link.target : link.source\n        if (this.diagram.getLinkedNodes(otherNode).length === 1) {\n          otherNode.visible = otherNode.keepVisible\n          if (!otherNode.visible) {\n            this.diagram.remove([otherNode], [])\n          }\n        } else {\n          this.diagram.remove([], [link])\n        }\n      })\n\n    this.diagram.scaleToNode(node, 1)\n    this.diagram.update()\n  }\n\n  openNode(node) {\n    node.open = true\n    this.links\n      .filter(link => link.source.id === node.id || link.target.id === node.id)\n      .forEach(link => {\n        const otherNode = link.source.id === node.id ? link.target : link.source\n        otherNode.visible = true\n        otherNode.x = node.x\n        otherNode.y = node.y\n        this.diagram.add([otherNode], [link])\n      })\n\n    this.diagram.scaleToNode(node, 1)\n    this.diagram.update()\n  }\n\n  addNode(node) {\n    this.nodes.push(node)\n    this.diagram.add([node], [])\n  }\n\n  removeNode(node) {\n    this.nodes = this.nodes.filter(n => n.id !== node.id)\n    this.links = this.links.filter(l => l.source.id !== node.id && l.target.id !== node.id)\n    this.diagram.remove([node], [])\n    this.diagram.update()\n    if (this.handlers.nodeRemoved) {\n      this.handlers.nodeRemoved(node)\n    }\n  }\n\n  getNode(id) {\n    return this.nodes.find(node => node.id === id)\n  }\n\n  addLinks(links) {\n    this.diagram.add([], links\n      .map(l => ({id: nextId(this.links), source: this.getNode(l.source.id), target: this.getNode(l.target.id)}))\n      .map(l => {\n        this.links.push(l)\n        return l\n      }))\n  }\n\n  removeLinks(links) {\n    const cmpLink = (a, b) => (a.source.id === b.source.id && a.target.id === b.target.id)\n    this.links = this.links.filter(l => !links.some(r => cmpLink(l, r)))\n    this.diagram.remove([], links)\n  }\n\n  newConnection(node) {\n    this.handlers.nameRequired()\n      .then(name => name ? name : Promise.reject('no name given'))\n      .then(name => {\n        let existing = this.nodes.find(node => node.name.toLowerCase() === name.toLowerCase())\n        if (!existing) {\n          existing = this.handlers.newNode ? this.handlers.newNode(name) : {name}\n          existing.id = existing.id || nextId(this.nodes)\n          this.nodes.push(existing)\n          this.diagram.add([existing], [])\n        }\n        if (!this.diagram.nodesConnected(node, existing)) {\n          const newLink = {id: nextId(this.links), source: node, target: existing}\n          if (this.handlers.newLink) {\n            this.handlers.newLink(newLink)\n          }\n          this.links.push(newLink)\n          this.diagram.add([], [newLink])\n        }\n\n        this.diagram.update()\n      })\n      .catch(this.handlers.error)\n  }\n\n  update() {\n    this.diagram.update()\n  }\n\n  scale(factor) {\n    return this.diagram.scale(factor)\n  }\n}\n\nmodule.exports = Network\n"]}