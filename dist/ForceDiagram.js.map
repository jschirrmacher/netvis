{"version":3,"sources":["../ForceDiagram.js"],"names":["currentZoom","ForceDiagram","domSelector","links","nodes","handlers","svg","d3","select","center","x","node","scrollWidth","y","scrollHeight","defs","append","svgGroup","attr","simulation","forceSimulation","velocityDecay","force","forceLink","distance","id","d","forceManyBody","strength","distanceMin","forceCollide","radius","iterations","forceCenter","forceX","forceY","drag","on","handleDragStarted","handleDragged","handleDragEnded","zoom","handleZoom","bind","call","linkContainer","nodeContainer","update","transform","event","k","active","alphaTarget","restart","fx","fy","undefined","type","handler","linkData","selectAll","data","linkEnter","enter","exit","remove","merge","nodeData","nodeEnter","classed","open","image","filter","shape","addCircleNode","addRectNode","text","name","wrap","handleTicks","alpha","bindHandlers","Object","keys","forEach","getBackground","source","target","replace","width","each","words","split","reverse","lineHeight","line","tspan","word","lineCount","pop","push","join","getComputedTextLength","l","map","concat","node1","node2","getLinkedNodes","some","n","nodesToAdd","linksToAdd","nodesConnected","nodesToRemove","linksToRemove","index","splice","isConnected","find","r","scale","Promise","fixNode","transition","duration","zoomIdentity","translate","releaseNode","resolve","factor","document","getElementById","link"],"mappings":"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","file":"ForceDiagram.js","sourcesContent":["let currentZoom = 1\n\nclass ForceDiagram {\n  constructor(domSelector) {\n    this.links = []\n    this.nodes = []\n    this.handlers = {}\n    this.svg = d3.select(domSelector)\n    this.center = {x: this.svg.node().scrollWidth / 2, y: this.svg.node().scrollHeight / 2}\n    this.defs = this.svg.append('defs')\n    const svgGroup = this.svg\n      .append('g')\n      .attr('id', 'svgGroup')\n\n    this.simulation = d3.forceSimulation()\n      .velocityDecay(0.55)\n      .force('link', d3.forceLink().distance(100).id(d => d.id))\n      .force('charge', d3.forceManyBody().strength(-100).distanceMin(1000))\n      .force('collide', d3.forceCollide().radius(100).iterations(2))\n      .force('center', d3.forceCenter(this.center.x, this.center.y))\n      .force('x', d3.forceX(this.center.x).strength(0.1))\n      .force('y', d3.forceY(this.center.y).strength(0.1))\n\n    this.drag = d3.drag()\n      .on('start', d => handleDragStarted(d, this.simulation))\n      .on('drag', d => handleDragged(d))\n      .on('end', d => handleDragEnded(d, this.simulation))\n\n    this.zoom = d3.zoom().on('zoom', handleZoom.bind(this))\n\n    this.svg\n      .call(this.zoom)\n      .call(this.drag)\n\n    this.linkContainer = svgGroup.append('g').attr('class', 'links')\n    this.nodeContainer = svgGroup.append('g').attr('class', 'nodes')\n\n    this.update()\n\n    function handleZoom() {\n      const transform = `translate(${d3.event.transform.x || 0}, ${d3.event.transform.y || 0}) scale(${d3.event.transform.k || 1})`\n      svgGroup.attr('transform', transform)\n      currentZoom = d3.event.transform.k\n      if (this.handlers.zoom) {\n        this.handlers.zoom(transform)\n      }\n    }\n\n    function handleDragStarted(d, simulation) {\n      if (!d3.event.active) {\n        simulation.alphaTarget(0.3).restart()\n      }\n      d.fx = d.x\n      d.fy = d.y\n    }\n\n    function handleDragged(d) {\n      d.fx = d3.event.x\n      d.fy = d3.event.y\n    }\n\n    function handleDragEnded(d, simulation) {\n      if (!d3.event.active) {\n        simulation.alphaTarget(0)\n      }\n      d.fx = undefined\n      d.fy = undefined\n    }\n  }\n\n  addHandler(type, handler) {\n    this.handlers[type] = handler\n  }\n\n  update() {\n    let linkData = this.linkContainer.selectAll('line').data(this.links, d => d.id)\n    let linkEnter = linkData.enter().append('line')\n    linkData.exit().remove()\n    linkData = linkEnter.merge(linkData)\n    this.simulation.force('link').links(this.links)\n\n    let nodeData = this.nodeContainer.selectAll('g').data(this.nodes, d => d.id)\n    let nodeEnter = nodeData\n      .enter()\n      .append('g')\n      .attr('id', d => 'node-' + d.id)\n      .classed('node', true)\n      .classed('open', d => d.open)\n      .classed('withBg', d => d.image)\n      .call(this.drag)\n\n    nodeData.exit().remove()\n\n    nodeEnter.filter(d => d.shape === 'circle').call(addCircleNode.bind(this))\n    nodeEnter.filter(d => d.shape !== 'circle').call(addRectNode.bind(this))\n\n    nodeEnter.append('text')\n      .classed('title', true)\n      .text(d => d.name)\n      .call(d => wrap(d, 90))\n\n    nodeData = nodeEnter.merge(nodeData)\n    this.simulation.nodes(this.nodes).on('tick', () => handleTicks.bind(this)(this.center))\n\n    this.simulation.alpha(0.3)\n    this.simulation.restart()\n\n    function bindHandlers(node) {\n      Object.keys(this.handlers).forEach(type => node.on(type, this.handlers[type]))\n    }\n\n    function addCircleNode(enter) {\n      enter.append('circle')\n        .classed('node', true)\n        .classed('open', d => d.open)\n        .attr('r', 50)\n        .attr('fill', getBackground.bind(this))\n        .call(bindHandlers.bind(this))\n    }\n\n    function addRectNode(enter) {\n      enter.append('rect')\n        .classed('node', true)\n        .classed('open', d => d.open)\n        .attr('x', -50)\n        .attr('y', -35)\n        .attr('width', 100)\n        .attr('height', 70)\n        .attr('fill', getBackground.bind(this))\n        .call(bindHandlers.bind(this))\n    }\n\n    function handleTicks(center) {\n      linkData\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y)\n\n      nodeData.attr('transform', d => 'translate(' + [d.x, d.y] + ')')\n    }\n\n    function getBackground(node) {\n      if (node.image) {\n        this.defs.append('pattern')\n          .attr('id', () => 'bg-' + node.id)\n          .attr('height', 1).attr('width', 1)\n          .append('image')\n          .attr('xlink:href', node.image.replace(/ /g, '%20'))\n          .attr('height', '100px').attr('width', '100px')\n          .attr('preserveAspectRatio', 'xMidYMid slice')\n      }\n\n      return node.image ? 'url(#bg-' + node.id + ')' : '#eef'\n    }\n\n    function wrap(text, width) {\n      text.each(function (node) {\n        const text = d3.select(this)\n        const words = (node.name || '').split(/[\\s-]+/).reverse()\n        const lineHeight = 1.1\n        let line = []\n        let tspan = text.text(null).append('tspan')\n        let word\n        let lineCount = 0\n        while (word = words.pop()) {\n          line.push(word)\n          tspan.text(line.join(' '))\n          if (tspan.node().getComputedTextLength() > width) {\n            line.pop()\n            tspan.text(line.join(' '))\n            lineCount++\n            line = [word]\n            tspan = text.append('tspan').attr('x', 0).attr('dy', lineHeight + 'em').text(word)\n          }\n        }\n        text.attr('y', (-lineCount * 0.3) + 'em')\n      })\n    }\n  }\n\n  getLinkedNodes(node) {\n    return this.links.filter(l => l.source.id === node.id).map(l => l.target)\n      .concat(this.links.filter(l => l.target.id === node.id).map(l => l.source))\n  }\n\n  nodesConnected(node1, node2) {\n    return this.getLinkedNodes(node1).some(n => n.id === node2.id)\n  }\n\n  static isConnected(link, node) {\n    return link.source.id === node.id || link.target.id === node.id\n  }\n\n  add(nodesToAdd, linksToAdd) {\n    if (nodesToAdd) {\n      nodesToAdd.forEach(n => !this.nodes.some(d => d.id === n.id) && this.nodes.push(n))\n    }\n    if (linksToAdd) {\n      linksToAdd.forEach(l => !this.nodesConnected(l.source, l.target) && this.links.push(l))\n    }\n  }\n\n  remove(nodesToRemove, linksToRemove) {\n    nodesToRemove.forEach(n => {\n      if (n.index > -1) {\n        this.nodes.splice(n.index, 1)\n      }\n      this.links = this.links.filter(l => !ForceDiagram.isConnected(l, n))\n    })\n    this.links = this.links.filter(l => !linksToRemove.find(r => r.id === l.id))\n  }\n\n  static fixNode(node) {\n    node.fx = node.x\n    node.fy = node.y\n  }\n\n  static releaseNode(node) {\n    node.fx = undefined\n    node.fy = undefined\n  }\n\n  scaleToNode(node, scale) {\n    return new Promise(resolve => {\n      ForceDiagram.fixNode(node)\n      this.svg.transition().duration(1000)\n        .call(this.zoom.transform, d3.zoomIdentity\n          .translate(this.center.x, this.center.y)\n          .scale(scale)\n          .translate(-node.x, -node.y)\n        )\n        .on('end', () => {\n          ForceDiagram.releaseNode(node)\n          resolve(true)\n        })\n    })\n  }\n\n  scale(factor) {\n    return new Promise(resolve => {\n      this.svg.transition().duration(1000)\n        .call(this.zoom.transform, d3.zoomIdentity\n          .scale(factor * currentZoom)\n        )\n        .on('end', () => resolve(true))\n    })\n  }\n\n  hide() {\n    this.svg.attr('style', 'opacity: 0; position: absolute; transition: opacity 0.5s')\n  }\n\n  show() {\n    this.svg.attr('style', 'opacity: 1; transition: opacity 0.5s')\n  }\n\n  getDomElement(node) {\n    return document.getElementById('node-' + node.id)\n  }\n}\n"]}