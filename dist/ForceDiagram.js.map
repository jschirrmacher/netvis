{"version":3,"sources":["../ForceDiagram.js"],"names":["ForceDiagram","domSelector","links","nodes","handlers","svg","d3","select","center","x","node","scrollWidth","y","scrollHeight","defs","append","svgGroup","attr","simulation","forceSimulation","velocityDecay","force","forceLink","distance","id","d","forceManyBody","strength","distanceMin","forceCollide","radius","iterations","drag","on","handleDragStarted","handleDragged","handleDragEnded","call","zoom","handleZoom","linkContainer","nodeContainer","update","event","transform","k","active","alphaTarget","restart","fx","fy","undefined","type","handler","linkData","selectAll","data","linkEnter","enter","exit","remove","merge","nodeData","nodeEnter","open","filter","shape","addCircleNode","bind","addRectNode","classed","text","name","wrap","newConnection","connectable","addButton","handleTicks","alpha","bindHandlers","Object","keys","forEach","getBackground","className","altText","action","group","source","target","image","replace","width","each","words","split","reverse","lineHeight","line","tspan","word","lineCount","pop","push","join","getComputedTextLength","nodesToAdd","linksToAdd","n","l","dToRemove","nIndex","indexOf","splice","isidConnected","link","index"],"mappings":"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","file":"ForceDiagram.js","sourcesContent":["class ForceDiagram {\n  constructor(domSelector) {\n    this.links = []\n    this.nodes = []\n    this.handlers = {}\n    const svg = d3.select(domSelector)\n    this.center = {x: svg.node().scrollWidth / 2, y: svg.node().scrollHeight / 2}\n    this.defs = svg.append('defs')\n    const svgGroup = svg\n      .append('g')\n      .attr('id', 'svgGroup')\n\n    this.simulation = d3.forceSimulation()\n      .velocityDecay(0.55)\n      .force('link', d3.forceLink().distance(100).id(d => d.id))\n      .force('charge', d3.forceManyBody().strength(-100).distanceMin(1000))\n      .force('collide', d3.forceCollide().radius(100).iterations(2))\n\n    this.drag = d3.drag()\n      .on('start', d => handleDragStarted(d, this.simulation))\n      .on('drag', d => handleDragged(d))\n      .on('end', d => handleDragEnded(d, this.simulation))\n\n    svg\n      .call(d3.zoom().on('zoom', handleZoom))\n      .call(this.drag)\n\n    this.linkContainer = svgGroup.append('g').attr('class', 'links')\n    this.nodeContainer = svgGroup.append('g').attr('class', 'nodes')\n\n    this.update()\n\n    function handleZoom() {\n      svgGroup.attr('transform',\n        `translate(${d3.event.transform.x}, ${d3.event.transform.y})` + ' ' +\n        `scale(${d3.event.transform.k})`)\n    }\n\n    function handleDragStarted(d, simulation) {\n      if (!d3.event.active) {\n        simulation.alphaTarget(0.3).restart()\n      }\n      d.fx = d.x\n      d.fy = d.y\n    }\n\n    function handleDragged(d) {\n      d.fx = d3.event.x\n      d.fy = d3.event.y\n    }\n\n    function handleDragEnded(d, simulation) {\n      if (!d3.event.active) {\n        simulation.alphaTarget(0)\n      }\n      d.fx = undefined\n      d.fy = undefined\n    }\n  }\n\n  addHandler(type, handler) {\n    this.handlers[type] = handler\n  }\n\n  update() {\n    let linkData = this.linkContainer.selectAll('line').data(this.links, d => d.id)\n    let linkEnter = linkData.enter().append('line')\n    linkData.exit().remove()\n    linkData = linkEnter.merge(linkData)\n    this.simulation.force('link').links(this.links)\n\n    let nodeData = this.nodeContainer.selectAll('g').data(this.nodes, d => d.id)\n    let nodeEnter = nodeData\n      .enter()\n      .append('g')\n      .attr('id', d => d.id)\n      .attr('class', d => 'node' + (d.open ? ' open' : ''))\n      .call(this.drag)\n\n    nodeData.exit().remove()\n\n    nodeEnter.filter(d => d.shape === 'circle').call(addCircleNode.bind(this))\n    nodeEnter.filter(d => d.shape !== 'circle').call(addRectNode.bind(this))\n\n    nodeEnter.append('text')\n      .classed('title', true)\n      .text(d => d.name)\n      .call(d => wrap(d, 90))\n\n    if (this.handlers.newConnection) {\n      nodeEnter\n        .filter(d => d.connectable)\n        .call(d => addButton(d, 'newConnection', '↗', 'New Connection', this.handlers.newConnection.bind(this)))\n    }\n\n    nodeData = nodeEnter.merge(nodeData)\n    this.simulation.nodes(this.nodes).on('tick', () => handleTicks.bind(this)(this.center))\n\n    this.simulation.restart()\n    this.simulation.alpha(1)\n\n    function bindHandlers(node) {\n      Object.keys(this.handlers).forEach(type => node.on(type, this.handlers[type]))\n    }\n\n    function addCircleNode(enter) {\n      enter.append('circle')\n        .classed('node', true)\n        .classed('open', d => d.open)\n        .attr('r', 50)\n        .attr('fill', getBackground.bind(this))\n        .call(bindHandlers.bind(this))\n    }\n\n    function addRectNode(enter) {\n      enter.append('rect')\n        .classed('node', true)\n        .classed('open', d => d.open)\n        .attr('x', -50)\n        .attr('y', -35)\n        .attr('width', 100)\n        .attr('height', 70)\n        .attr('fill', getBackground.bind(this))\n        .call(bindHandlers.bind(this))\n    }\n\n    function addButton(enter, className, text, altText, action) {\n      const group = enter.append('g').classed(className, true)\n      group.append('circle').attr('r', 12.5).on('click', action)\n      group.append('text').text(text)\n      group.append('text').classed('alt-text', true).text(altText)\n    }\n\n    function handleTicks(center) {\n      linkData\n        .attr('x1', d => d.source.x + center.x)\n        .attr('y1', d => d.source.y + center.y)\n        .attr('x2', d => d.target.x + center.x)\n        .attr('y2', d => d.target.y + center.y)\n\n      nodeData.attr('transform', d => 'translate(' + [d.x + center.x, d.y + center.y] + ')')\n    }\n\n    function getBackground(node) {\n      if (node.image) {\n        this.defs.append('pattern')\n          .attr('id', () => 'bg-' + node.id)\n          .attr('height', 1).attr('width', 1)\n          .append('image')\n          .attr('xlink:href', node.image.replace(/ /g, '%20'))\n          .attr('height', '100px').attr('width', '100px')\n          .attr('preserveAspectRatio', 'xMidYMid slice')\n      }\n\n      return node.image ? 'url(#bg-' + node.id + ')' : '#eef'\n    }\n\n    function wrap(text, width) {\n      text.each(function (node) {\n        const text = d3.select(this)\n        const words = (node.name || '').split(/[\\s-]+/).reverse()\n        const lineHeight = 1.1\n        let line = []\n        let tspan = text.text(null).append('tspan')\n        let word\n        let lineCount = 0\n        while (word = words.pop()) {\n          line.push(word)\n          tspan.text(line.join(' '))\n          if (tspan.node().getComputedTextLength() > width) {\n            line.pop()\n            tspan.text(line.join(' '))\n            lineCount++\n            line = [word]\n            tspan = text.append('tspan').attr('x', 0).attr('dy', lineHeight + 'em').text(word)\n          }\n        }\n        text.attr('y', (-lineCount * 0.3) + 'em')\n      })\n    }\n  }\n\n  add(nodesToAdd, linksToAdd) {\n    if (nodesToAdd) {\n      nodesToAdd.forEach(n => this.nodes.push(n))\n    }\n    if (linksToAdd) {\n      linksToAdd.forEach(l => this.links.push(l))\n    }\n  }\n\n  remove(dToRemove) {\n    const nIndex = this.nodes.indexOf(dToRemove)\n    if (nIndex > -1) {\n      this.nodes.splice(nIndex, 1)\n    }\n\n    const isidConnected = (link, id) => link.source.id === id || link.target.id === id\n    this.links.forEach((l, index) => isidConnected(l, dToRemove.id) && this.links.splice(index, 1))\n  }\n}\n"]}